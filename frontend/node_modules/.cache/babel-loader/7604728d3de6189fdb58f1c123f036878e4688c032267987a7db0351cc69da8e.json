{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\ai-mood-playlist\\\\frontend\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport UploadForm from '../components/UploadForm';\nimport MoodDisplay from '../components/MoodDisplay';\nimport PlaylistCard from '../components/PlaylistCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [mood, setMood] = useState(null);\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleFormSubmit = async formData => {\n    setLoading(true);\n    setMood(null);\n    setTracks([]);\n    try {\n      const response = await fetch(\"http://localhost:8000/predict\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setMood(data.mood);\n      setTracks(data.tracks || []);\n    } catch (err) {\n      alert(\"Failed to connect to backend. Is FastAPI running?\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 flex flex-col items-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6 text-center\",\n      children: \"\\uD83C\\uDFB6 AI Mood-Based Playlist Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-gray-500\",\n      children: \"Analyzing mood and fetching tracks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), mood && /*#__PURE__*/_jsxDEV(MoodDisplay, {\n      mood: mood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this), tracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mt-4 max-w-5xl w-full\",\n      children: tracks.map((track, idx) => /*#__PURE__*/_jsxDEV(PlaylistCard, {\n        playlist: track\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"L5ebw1kCWdv1zRNdh7D4v63aXxw=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","UploadForm","MoodDisplay","PlaylistCard","jsxDEV","_jsxDEV","Home","_s","mood","setMood","tracks","setTracks","loading","setLoading","handleFormSubmit","formData","response","fetch","method","body","data","json","err","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","length","map","track","idx","playlist","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/ai-mood-playlist/frontend/src/pages/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport UploadForm from '../components/UploadForm';\nimport MoodDisplay from '../components/MoodDisplay';\nimport PlaylistCard from '../components/PlaylistCard';\n\nexport default function Home() {\n  const [mood, setMood] = useState(null);\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleFormSubmit = async (formData) => {\n    setLoading(true);\n    setMood(null);\n    setTracks([]);\n\n    try {\n      const response = await fetch(\"http://localhost:8000/predict\", {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await response.json();\n      setMood(data.mood);\n      setTracks(data.tracks || []);\n    } catch (err) {\n      alert(\"Failed to connect to backend. Is FastAPI running?\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col items-center p-6\">\n      <h1 className=\"text-3xl font-bold mb-6 text-center\">ðŸŽ¶ AI Mood-Based Playlist Generator</h1>\n\n      <UploadForm onSubmit={handleFormSubmit} />\n\n      {loading && <p className=\"mt-4 text-gray-500\">Analyzing mood and fetching tracks...</p>}\n\n      {mood && <MoodDisplay mood={mood} />}\n\n      {tracks.length > 0 && (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mt-4 max-w-5xl w-full\">\n          {tracks.map((track, idx) => (\n            <PlaylistCard key={idx} playlist={track} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3CF,UAAU,CAAC,IAAI,CAAC;IAChBJ,OAAO,CAAC,IAAI,CAAC;IACbE,SAAS,CAAC,EAAE,CAAC;IAEb,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEJ;MACR,CAAC,CAAC;MACF,MAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCZ,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC;MAClBG,SAAS,CAACS,IAAI,CAACV,MAAM,IAAI,EAAE,CAAC;IAC9B,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,KAAK,CAAC,mDAAmD,CAAC;IAC5D,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA;IAAKmB,SAAS,EAAC,wDAAwD;IAAAC,QAAA,gBACrEpB,OAAA;MAAImB,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5FxB,OAAA,CAACJ,UAAU;MAAC6B,QAAQ,EAAEhB;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEzCjB,OAAO,iBAAIP,OAAA;MAAGmB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEtFrB,IAAI,iBAAIH,OAAA,CAACH,WAAW;MAACM,IAAI,EAAEA;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEnCnB,MAAM,CAACqB,MAAM,GAAG,CAAC,iBAChB1B,OAAA;MAAKmB,SAAS,EAAC,4EAA4E;MAAAC,QAAA,EACxFf,MAAM,CAACsB,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACrB7B,OAAA,CAACF,YAAY;QAAWgC,QAAQ,EAAEF;MAAM,GAArBC,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CA5CuBD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}