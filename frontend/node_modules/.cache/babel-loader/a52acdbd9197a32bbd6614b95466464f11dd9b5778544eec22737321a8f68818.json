{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\ai-mood-playlist\\\\frontend\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport UploadForm from '../components/UploadForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [mood, setMood] = useState(null);\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleFormSubmit = async formData => {\n    setLoading(true);\n    setMood(null);\n    setTracks([]);\n    try {\n      const response = await fetch(\"http://localhost:8000/predict\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setMood(data.mood);\n      setTracks(data.tracks || []);\n    } catch (err) {\n      alert(\"Failed to connect to backend. Is FastAPI running?\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-6\",\n      children: \"\\uD83C\\uDFB6 AI Mood-Based Playlist Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"L5ebw1kCWdv1zRNdh7D4v63aXxw=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","UploadForm","jsxDEV","_jsxDEV","Home","_s","mood","setMood","tracks","setTracks","loading","setLoading","handleFormSubmit","formData","response","fetch","method","body","data","json","err","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/ai-mood-playlist/frontend/src/pages/Home.jsx"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport UploadForm from '../components/UploadForm';\n\nexport default function Home() {\n  const [mood, setMood] = useState(null);\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleFormSubmit = async (formData) => {\n    setLoading(true);\n    setMood(null);\n    setTracks([]);\n\n    try {\n      const response = await fetch(\"http://localhost:8000/predict\", {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await response.json();\n      setMood(data.mood);\n      setTracks(data.tracks || []);\n    } catch (err) {\n      alert(\"Failed to connect to backend. Is FastAPI running?\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <h1 className=\"text-3xl font-bold text-center mb-6\">ðŸŽ¶ AI Mood-Based Playlist Generator</h1>\n      <UploadForm onSubmit={handleFormSubmit} />\n    </div>\n  );\n}\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3CF,UAAU,CAAC,IAAI,CAAC;IAChBJ,OAAO,CAAC,IAAI,CAAC;IACbE,SAAS,CAAC,EAAE,CAAC;IAEb,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEJ;MACR,CAAC,CAAC;MACF,MAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCZ,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC;MAClBG,SAAS,CAACS,IAAI,CAACV,MAAM,IAAI,EAAE,CAAC;IAC9B,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,KAAK,CAAC,mDAAmD,CAAC;IAC5D,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA;IAAKmB,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CpB,OAAA;MAAImB,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5FxB,OAAA,CAACF,UAAU;MAAC2B,QAAQ,EAAEhB;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACtB,EAAA,CA/BuBD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}